This is the gradle version of the original, but  subsequently deprecated "hellofit"  App that was  covered in detail in the book. 

At the time of writing the book, the gradle build system and the Fit API were in a state of flux.  The original hellofit app  was aligned with  Google Play Services 6.x and the legacy ant based build system.  The current project GHelloFit supercedes the original hellofit App. It works with gradle based build system and the Google Play Services version 7.x and aligns with the latest changes to the GoogleApiClient with respect to  Fit API access.

Going forward, it behooves any new Android project to leverage the gradle based build system. The ant based build system despite being deprecated,  will tend to  retain  relevance for the limited  purpose of compiling pre-existing libraries and Apps. 

Building and Running
--------------------
1. Setup Google Fit ( Fitness ) API access via the Google Console https://console.developers.google.com.
   The steps for activating  the Google Fit "Fitness"  API and setting up the Android client ID are available
   at :
    https://developers.google.com/console/help/new/
    https://developers.google.com/fit/android/get-started

2. Ensure that this projects src/main/res/values/version.xml has the  Google Play Services version that
   you are integrating with based on dependency declared in your app/build.gradle dependencies such as
   >> compile 'com.google.android.gms:play-services:7.8.0'   ( 789500)
   or later per your build settings.  If for any reason you do not get the version right, you will
   encounter a helpful runtime errori message along the lines :
    ( Expected versionX but found versionY).
    Using  "versionY"  in your src/main/res/values/version.xml should fix this matter.

 3. Copy  build.gradle.CHANGEME to build.gradle and modify its content to match your keystore specifics

 4. Install the App :
    $ gradle clean installRelease

 5. One you run the App, it is important to keep the App running for several minutes, as there can be latency in detection of ALL  DataSources, registration callbacks and DataPointListener datapoints. 
